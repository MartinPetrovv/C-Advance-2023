
using System.Diagnostics.Metrics;

int[] input = Console.ReadLine()
    .Split(" ", StringSplitOptions.RemoveEmptyEntries)
    .Select(int.Parse)
    .ToArray();
int rows = input[0];
int cols = input[1];

string snake = Console.ReadLine();

char[,] matrix = new char[rows, cols];

Queue<char> queue = new Queue<char>();
int counter = 0;
int capacity = rows * cols;

for (int i = 0; i < snake.Length; i++)
{
    queue.Enqueue(snake[i]);
    counter++;
    if (counter == capacity)
    {
        break;
    }
    if (i == snake.Length-1)
    {
        i = -1;
    }
}


for (int row = 0; row < rows; row++)
{

    if (row%2==0)
    {
        for (int col = 0; col < cols; col++)
        {
            matrix[row, col]= queue.Dequeue();
        }
    }

    else if (row % 2 != 0)
    {
        for (int i = cols-1; i > -1; i--)
        {
            matrix[row, i] = queue.Dequeue();
        }
    }
    
}

for (int row = 0; row < matrix.GetLength(0); row++)
{

    for (int col = 0; col < matrix.GetLength(1); col++)
    {
        Console.Write(matrix[row, col]);
    }

    Console.WriteLine();
}




/*
5 6
SoftUni
 */
